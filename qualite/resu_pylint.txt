************* Module genCodeGraphiques
genCodeGraphiques.py:36:0: R0913: Too many arguments (10/5) (too-many-arguments)
genCodeGraphiques.py:36:0: R0914: Too many local variables (37/15) (too-many-locals)
genCodeGraphiques.py:36:0: R0915: Too many statements (64/50) (too-many-statements)
************* Module genCodeTableaux
genCodeTableaux.py:39:0: R0913: Too many arguments (8/5) (too-many-arguments)
genCodeTableaux.py:39:0: R0914: Too many local variables (28/15) (too-many-locals)
genCodeTableaux.py:271:0: R0913: Too many arguments (7/5) (too-many-arguments)
genCodeTableaux.py:271:0: R0914: Too many local variables (52/15) (too-many-locals)
genCodeTableaux.py:271:0: R0912: Too many branches (19/12) (too-many-branches)
genCodeTableaux.py:271:0: R0915: Too many statements (106/50) (too-many-statements)
genCodeTableaux.py:735:0: R0913: Too many arguments (6/5) (too-many-arguments)
genCodeTableaux.py:735:0: R0914: Too many local variables (17/15) (too-many-locals)
genCodeTableaux.py:735:0: R0912: Too many branches (15/12) (too-many-branches)
genCodeTableaux.py:821:0: R0913: Too many arguments (6/5) (too-many-arguments)
genCodeTableaux.py:821:0: R0912: Too many branches (15/12) (too-many-branches)
************* Module genCodeTexte
genCodeTexte.py:37:0: R0913: Too many arguments (9/5) (too-many-arguments)
genCodeTexte.py:37:0: R0914: Too many local variables (35/15) (too-many-locals)
genCodeTexte.py:37:0: R0915: Too many statements (85/50) (too-many-statements)
************* Module genHTMLCodeGraphiques
genHTMLCodeGraphiques.py:51:0: R0913: Too many arguments (10/5) (too-many-arguments)
genHTMLCodeGraphiques.py:51:0: R0914: Too many local variables (28/15) (too-many-locals)
genHTMLCodeGraphiques.py:51:0: R0912: Too many branches (14/12) (too-many-branches)
genHTMLCodeGraphiques.py:51:0: R0915: Too many statements (51/50) (too-many-statements)
************* Module genHTMLCodeTableaux
genHTMLCodeTableaux.py:34:0: R0913: Too many arguments (10/5) (too-many-arguments)
genHTMLCodeTableaux.py:34:0: R0914: Too many local variables (22/15) (too-many-locals)
genHTMLCodeTableaux.py:116:0: R0913: Too many arguments (10/5) (too-many-arguments)
genHTMLCodeTableaux.py:116:0: R0914: Too many local variables (16/15) (too-many-locals)
************* Module ratioTendance
ratioTendance.py:72:0: R0912: Too many branches (20/12) (too-many-branches)
ratioTendance.py:72:0: R0915: Too many statements (63/50) (too-many-statements)
************* Module updateDataMinFi
updateDataMinFi.py:55:0: R0914: Too many local variables (26/15) (too-many-locals)
updateDataMinFi.py:86:16: W0612: Unused variable 'arg' (unused-variable)
updateDataMinFi.py:55:0: R0915: Too many statements (55/50) (too-many-statements)
************* Module updateScoreWikipedia
updateScoreWikipedia.py:63:0: R0914: Too many local variables (17/15) (too-many-locals)
updateScoreWikipedia.py:95:16: W0612: Unused variable 'arg' (unused-variable)
updateScoreWikipedia.py:209:0: R0914: Too many local variables (18/15) (too-many-locals)
************* Module utilitaires
utilitaires.py:158:0: R0912: Too many branches (14/12) (too-many-branches)
utilitaires.py:212:0: R0914: Too many local variables (19/15) (too-many-locals)
utilitaires.py:277:4: W0603: Using the global statement (global-statement)
utilitaires.py:323:8: C0415: Import outside toplevel (matplotlib) (import-outside-toplevel)
utilitaires.py:323:8: W0611: Unused import matplotlib (unused-import)
utilitaires.py:1:0: R0801: Similar lines in 2 files
==updateDataMinFi:63
==updateScoreWikipedia:71
    config = configparser.RawConfigParser()
    ficProperties = 'FinancesLocales.properties'
    config.read(ficProperties)

    #############################
    # Analyse des arguments reçus
    #############################
    if argv is None:
        argv = sys.argv

    nomProg = os.path.basename(argv[0])

    # parse command line options
    try: (duplicate-code)
utilitaires.py:1:0: R0801: Similar lines in 2 files
==updateDataMinFi:99
==updateScoreWikipedia:112
                "\nau lieu de : " + str(len(args))
        print(msg, file=sys.stderr)
        sys.exit(1)

    # Vérifie et récupère le nom de la base à mettre à jour
    databasePath = args[0]
    if not databasePath.endswith(".db"):
        msg = __doc__ + "Erreur : Le nom de la base de donnée doit se terminer par .db :\n" + \
                databasePath
        print(msg, file=sys.stderr)
        sys.exit(2)
 (duplicate-code)
utilitaires.py:1:0: R0801: Similar lines in 2 files
==updateDataMinFi:79
==updateScoreWikipedia:88
    except getopt.error as msg:
        print(msg)
        print("Pour avoir de l'aide : --help ou -h", file=sys.stderr)
        sys.exit(1)

    # process options
    for option, arg in opts:
        verboseOpt, sortiePgm = \
            utilitaires.traiteOptionStd(config, option, nomProg, __doc__, (duplicate-code)

------------------------------------------------------------------
Your code has been rated at 9.77/10 (previous run: 9.77/10, -0.00)

